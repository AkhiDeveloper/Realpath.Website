// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Realpath.NewWebSite.Data;

#nullable disable

namespace Realpath.NewWebSite.Migrations
{
    [DbContext(typeof(RealpathNewWebSiteContext))]
    [Migration("20220708085412_migration2")]
    partial class migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Realpath.NewWebSite.Data.Models.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubRegion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("addresses");
                });

            modelBuilder.Entity("Realpath.NewWebSite.Data.Models.CompanyInfo", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int?>("addressid")
                        .HasColumnType("int");

                    b.Property<int?>("contactDetailid")
                        .HasColumnType("int");

                    b.Property<string>("logoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("addressid");

                    b.HasIndex("contactDetailid");

                    b.ToTable("CompanyInfo");
                });

            modelBuilder.Entity("Realpath.NewWebSite.Data.Models.ContactDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("MailAddess")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pOBoxAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("contactDetails");
                });

            modelBuilder.Entity("Realpath.NewWebSite.Data.Models.Designation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("level")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("designations");
                });

            modelBuilder.Entity("Realpath.NewWebSite.Data.Models.Member", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("addressid")
                        .HasColumnType("int");

                    b.Property<int>("contactDetailid")
                        .HasColumnType("int");

                    b.Property<int>("designationid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("addressid");

                    b.HasIndex("contactDetailid");

                    b.HasIndex("designationid");

                    b.ToTable("members");
                });

            modelBuilder.Entity("Realpath.NewWebSite.Data.Models.Photo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Descrition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("gallery");
                });

            modelBuilder.Entity("Realpath.NewWebSite.Data.Models.Project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("Realpath.NewWebSite.Data.Models.Service", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Serviceid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Serviceid");

                    b.ToTable("services");
                });

            modelBuilder.Entity("Realpath.NewWebSite.Data.Models.CompanyInfo", b =>
                {
                    b.HasOne("Realpath.NewWebSite.Data.Models.Address", "address")
                        .WithMany()
                        .HasForeignKey("addressid");

                    b.HasOne("Realpath.NewWebSite.Data.Models.ContactDetail", "contactDetail")
                        .WithMany()
                        .HasForeignKey("contactDetailid");

                    b.Navigation("address");

                    b.Navigation("contactDetail");
                });

            modelBuilder.Entity("Realpath.NewWebSite.Data.Models.Member", b =>
                {
                    b.HasOne("Realpath.NewWebSite.Data.Models.Address", "address")
                        .WithMany()
                        .HasForeignKey("addressid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Realpath.NewWebSite.Data.Models.ContactDetail", "contactDetail")
                        .WithMany()
                        .HasForeignKey("contactDetailid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Realpath.NewWebSite.Data.Models.Designation", "designation")
                        .WithMany()
                        .HasForeignKey("designationid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("address");

                    b.Navigation("contactDetail");

                    b.Navigation("designation");
                });

            modelBuilder.Entity("Realpath.NewWebSite.Data.Models.Service", b =>
                {
                    b.HasOne("Realpath.NewWebSite.Data.Models.Service", null)
                        .WithMany("SubServices")
                        .HasForeignKey("Serviceid");
                });

            modelBuilder.Entity("Realpath.NewWebSite.Data.Models.Service", b =>
                {
                    b.Navigation("SubServices");
                });
#pragma warning restore 612, 618
        }
    }
}
